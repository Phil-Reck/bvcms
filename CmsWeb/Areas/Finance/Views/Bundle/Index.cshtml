@model CmsWeb.Areas.Finance.Models.BundleModel
@using CmsData.Codes
@using UtilityExtensions
@using CmsWeb
@{
    ViewBag.Title = "Contribution Bundle";
    ViewBag.PageHeader = $"Contribution Bundle #{Model.BundleId}";
    Layout = ViewExtensions2.TouchPointLayout();
    var difference = Model.TotalHeader() - Model.TotalItems();
    var customreport = Model.CustomBundleReport;
    var remoteDeposit = Model.RemoteDepositEnabled;
}

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="box box-responsive">
            <div class="box-title-btn">
                <div class="box-tools">
                    <a class="btn btn-default" href="/Bundles"><i class="fa fa-arrow-circle-left"></i> Back to List</a>
                    @RenderToolBar(remoteDeposit, xs: false)
                </div>
            </div>
            <div class="box-content">
                <form id="bundleform" class="well">
                    <div class="row">
                        <div class="col-sm-6">
                            <dl>
                                <dt>Bundle Status</dt>
                                <dd>@Model.Status</dd>
                            </dl>
                            <dl>
                                <dt>Bundle Type</dt>
                                <dd>@Model.Type</dd>
                            </dl>
                            <dl>
                                <dt>Default Fund</dt>
                                <dd><a href="/PostBundle/FundTotals/@Model.BundleId" style="text-decoration: underline;">@Model.DefaultFund</a></dd>
                            </dl>
                        </div>
                        <div class="col-sm-6">
                            <dl>
                                <dt>Contribution Date</dt>
                                <dd>@Model.Bundle.ContributionDate.ToShortDateString()</dd>
                            </dl>
                            <dl>
                                <dt>Deposit Date</dt>
                                <dd>@Model.Bundle.DepositDate.FormatDate()</dd>
                            </dl>
                        </div>
                    </div>
                </form>
                <div class="stat-panel-container">
                    <div class="stat-panel-inner-container">
                        <div class="stat-panel">
                            <span class="stat-title">BUNDLE TOTAL</span>
                            <span class="stat-figure">@Model.TotalHeader().ToString("C2")</span>
                        </div>
                        <div class="stat-panel">
                            <span class="stat-title">ITEMS TOTAL</span>
                            <span class="stat-figure">@Model.TotalItems().ToString("C2")</span>
                        </div>
                        <div class="stat-panel">
                            <span class="stat-title">ITEM COUNT</span>
                            <span class="stat-figure">@Model.Count().ToString("N0")</span>
                        </div>
                        @if (customreport.HasValue())
                        {
                            <div class="stat-panel">
                                <span class="stat-title">&nbsp;</span>
                                <span class="stat-figure"><a href="@customreport.Replace("{bundleid}", Model.BundleId.ToString())" target="bundlerpt" style="color:white">Bundle Report</a></span>
                            </div>
                        }
                        <div style="clear: both;"></div>
                    </div>
                </div>
                <form id="results">
                    @Html.Partial("Results", Model)
                </form>
                <div class="visible-xs-block">
                    @RenderToolBar(remoteDeposit, xs: true)
                    <hr />
                    <a class="btn btn-default btn-block" href="/Bundles"><i class="fa fa-arrow-circle-left"></i> Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>
@helper RenderToolBar(bool remoteDeposit, bool xs)
{
    var css = xs ? "btn-block" : "";
    <div class="btn-group @css">
        <button type="button" class="btn btn-primary @css dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
            Actions <span class="caret"></span>
        </button>
        <ul class="dropdown-menu dropdown-menu-right @css">
            @if (Model.IsAdmin || Model.BundleStatusId != BundleStatusCode.Closed)
            {
                if (!User.IsInRole("FinanceDataEntry"))
                {
                    <li><a id="delete" href="/Bundle/Delete/@Model.BundleId"><i class="fa fa-trash"></i>&nbsp;&nbsp;Delete</a></li>
                }
            }
            @if (Model.CanEdit)
            {
                <li><a id="editbundle" href="/Bundle/Edit/@Model.BundleId"><i class="fa fa-pencil"></i>&nbsp;&nbsp;Edit Bundle Header</a></li>
            }
            @if (Model.BundleStatusId != BundleStatusCode.Closed)
            {
                <li><a href="/PostBundle/@Model.BundleId"><i class="fa fa-pencil-square-o"></i>&nbsp;&nbsp;Post Bundle / Edit</a></li>
            }
            else
            {
                <li><a href="/Bundle/Export/@Model.BundleId"><i class="fa fa-file-excel-o"></i>&nbsp;&nbsp;Export to Excel</a></li>
                if (remoteDeposit)
                {
                    <li><a href="/RemoteDeposit/@Model.BundleId" class="longrunop"><i class="fa fa-file-text-o"></i>&nbsp;&nbsp;Export Remote Deposit File</a></li>
                }
            }
            <li class="divider"></li>
            <li><a href="/Bundles/NewBundle/"><i class="fa fa-plus-circle"></i>&nbsp;&nbsp;Create New Bundle</a></li>
        </ul>
    </div>
}

@section scripts
{
    <script type="text/javascript">
        $(function () {
            $('body').on('click', '#delete', function (ev) {
                ev.preventDefault();
                var href = $(this).attr("href");

                swal({
                    title: "Are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Yes, delete it!",
                    closeOnConfirm: false
                },
                    function () {
                        $.post(href, null, function (ret) {
                            if (ret && ret.error)
                                swal("Error!", ret.error, "error");
                            else {
                                swal({
                                    title: "Deleted!",
                                    type: "success"
                                },
                                    function () {
                                        window.location = ret;
                                    });
                            }
                        });
                    });
                return true;
            });

            $('body').on('click', 'a.displayedit', function (ev) {
                ev.preventDefault();
                var f = $(this).closest('form');
                f.validate();
                if (f.valid()) {
                    var q = f.serialize();
                    $.post($(this).attr('href'), q, function (ret) {
                        window.location = window.location;
                    });
                }
                return false;
            });

            $('body').on('change', '#Status', function () {
                if ($('#Status').val() == 'Open') {
                    $('#IsOpen').val('True');
                } else {
                    $('#IsOpen').val('False');
                }
            });

            $.validator.setDefaults({
                highlight: function (input) {
                    $(input).addClass("ui-state-highlight");
                },
                unhighlight: function (input) {
                    $(input).removeClass("ui-state-highlight");
                }
            });

            $.SetValidation = function () {
                var extraSmallDevice = $('.device-xs').is(':visible');
                var smallDevice = $('.device-sm').is(':visible');
                if (extraSmallDevice || smallDevice) {
                    $("#bundleform").validate({
                        rules: {
                            "Bundle.ContributionDate": { required: true },
                            "Bundle.TotalCash": { number: true },
                            "Bundle.TotalChecks": { number: true },
                            "Bundle.TotalEnvelopes": { number: true },
                        }
                    });
                } else {
                    $("#bundleform").validate({
                        rules: {
                            "Bundle.ContributionDate": { date: true, required: true },
                            "Bundle.DepositDate": { date: true },
                            "Bundle.TotalCash": { number: true },
                            "Bundle.TotalChecks": { number: true },
                            "Bundle.TotalEnvelopes": { number: true },
                        }
                    });
                }

            };

            $.SetValidation();
        });
    </script>
}
