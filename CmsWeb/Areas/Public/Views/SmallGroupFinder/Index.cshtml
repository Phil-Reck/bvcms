@using CmsWeb.Areas.Public.Models
@using UtilityExtensions
@model CmsWeb.Areas.Public.Models.SmallGroupFinderModel
@{
    var st = Model.getSetting("SubmitText");
    var ts = Model.getSetting("TextSize");
    var ff = Model.getSetting("FontFamily");

    var bc = Model.getSetting("BGColor");
    var fc = Model.getSetting("FGColor");
    var sh = Model.getSetting("ShowHeaders");

    var SubmitText = st != null ? st.value : "Find Groups";
    var FontFamily = ff != null ? ff.value : "Verdana,Arial,Helvetica,sans-serif";
    var TextSize = ts != null ? ts.value : "12";
    var BGColor = bc != null ? bc.value : "#FFFFFF";
    var FGColor = fc != null ? fc.value : "#000000";
    var ShowHeaders = sh != null ? bool.Parse(sh.value) : false;

    var GroupsFound = Model.getGroups().Organizations;
    var state = Request.HttpMethod.Equal("post") ? "state-results" : "state-search";
}
<!DOCTYPE html>
<html lang="@System.Globalization.CultureInfo.CurrentUICulture.Name">
<head>
    <title>Small Group Finder</title>
    <link rel="shortcut icon" href="@Url.Content("~/favicon.ico?v=4")">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="robots" content="noindex" />
    <meta name="viewport" content="width=device-width, maximum-scale=1.0">
    @ViewExtensions2.GoogleFonts()
    @ViewExtensions2.FontAwesome()
    @Fingerprint.Css("/Content/touchpoint/css/app.css")
    <style type="text/css">
        body {
            font-size: @(TextSize)px;
            font-family: @(FontFamily);
            background-color: @(BGColor);
            color: @(FGColor);
        }

        input {
            font-size: @(TextSize)px;
            font-family: @(FontFamily);
        }

        select {
            font-size: @(TextSize)px;
            font-family: @(FontFamily);
        }

        .search {
            padding:1px 5px 1px 5px;
        }

        .right {
            text-align: right;
        }

        .left {
            text-align: left;
        }

        .center {
            text-align: center;
        }

        .top {
            vertical-align: top;
        }

        .nowrap {
            white-space: nowrap;
        }

        .submit {
            padding-top:10px;
        }
        select {
          width: 12em;
        }
        @@media only screen and (min-device-width : 320px) and (max-device-width : 640px) {
            .state-search .search-form {
                display:block;
            }
            .state-search .search-results {
                display: none;
            }
            .state-results .search-form {
                display: none;
            }
            .state-results .search-results {
                display: block;
            }
        }
    </style>
</head>
<body class="@state">
    <table width="100%">
        <tbody>
            <tr>
                <td width="1%" class="nowrap center top search-form">
                    @if (ShowHeaders)
                    {
                        <text>Select Group Options</text>
                        <hr />
                    }
                    <div class="search">
                        <form method="post">
                            <table width="100%">
                                @for (var iX = 0; iX < Model.getCount(SmallGroupFinderModel.TYPE_FILTER); iX++)
                                {
                                    var f = Model.getFilter(iX);
                                    var fi = Model.getFilterItems(iX);

                                    <tr>
                                        <td class="right nowrap">@(f.title + ":")</td>
                                        <td class="left">
                                            <select name="@f.name">
                                                @foreach (var item in fi)
                                                {
                                                    <option @(Model.IsSelectedValue(f.name, item.value) ? "selected" : "") value="@item.value">@item.value</option>
                                                }
                                            </select>
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td colspan="2" class="center submit">
                                        <input type="submit" value="@(SubmitText)" />
                                    </td>
                                </tr>
                            </table>
                        </form>
                    </div>
                    <div>
                        @Html.Raw(Model.getGutter())
                    </div>
                </td>
                <td width="99%" class="top search-results">
                    @if (ShowHeaders)
                    {
                        <a href="#" id="go-back"><i class="fa fa-arrow-left fa-lg"></i></a>
                        <span>Search Results - @(GroupsFound.Count()) Group(s) Found</span>
                        <hr />
                    }
                    @foreach (var group in GroupsFound)
                    {
                        GroupLookup gl = new GroupLookup();
                        gl.populateFromOrg(group);
                        @Html.Raw(Model.replaceAndWrite(gl));
                    }
                </td>
            </tr>
        </tbody>
    </table>
    <script>
        var goback = document.getElementById('go-back');
        goback.addEventListener('click', function (event) { event.preventDefault(); window.history.back(); });
    </script>
</body>
</html>
