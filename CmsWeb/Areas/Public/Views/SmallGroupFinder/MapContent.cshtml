@using CmsWeb.Areas.Public.Models
@using CmsWeb.Models
@model SmallGroupFinderModel
@{
    var mapModel = new SGMapModel(Model.getGroups());

    var latitude = double.Parse(Model.getSetting("Latitude")?.value ?? "40.757577");
    var longitude = double.Parse(Model.getSetting("Longitude")?.value ?? "-73.969246");
    var mapZoom = int.Parse(Model.getSetting("MapZoom")?.value ?? "12");

    var showOnlyName = Model.getSetting("ShowOnlyName")?.value;
    var showOnlyValue = Model.getSetting("ShowOnlyValue")?.value;

    var markerName = Model.getSetting("MarkerTextName")?.value;
    var markerValue = Model.getSetting("MarkerTextValue")?.value;
    var markerText = Model.getSetting("MarkerText")?.value;

    var extraValueHost = Model.getSetting("ExtraValueHost")?.value;
    var orgTypes = Model.getSetting("OrgTypes")?.value;
    var sortBy = Model.getSetting("SortBy")?.value;

    bool useEmbeddedMap;
    bool.TryParse(Model.getSetting("UseEmbeddedMap")?.value ?? "false", out useEmbeddedMap);

    mapModel.SetUseEmbeddedMap(useEmbeddedMap);

    if (!string.IsNullOrWhiteSpace(showOnlyName) && !string.IsNullOrWhiteSpace(showOnlyValue))
    {
        mapModel.SetShowOnly(showOnlyName, showOnlyValue);
    }

    if (!string.IsNullOrWhiteSpace(markerName) &&
        !string.IsNullOrWhiteSpace(markerValue) &&
        !string.IsNullOrWhiteSpace(markerText))
    {
        mapModel.SetMarkerText(markerName, markerValue, markerText);
    }

    if (!string.IsNullOrWhiteSpace(extraValueHost))
    {
        mapModel.SetExtraValue(extraValueHost);
    }

    if (!string.IsNullOrWhiteSpace(orgTypes))
    {
        mapModel.SetOrgTypes(orgTypes);
    }

    if (!string.IsNullOrWhiteSpace(sortBy))
    {
        mapModel.SetSortBy(sortBy);
    }
}

<div class="row map-content">
    @Html.Raw(Html.Json("markers", mapModel.Locations()))
    <script type="text/javascript">
        var latitude = @latitude;
        var longitude = @longitude;
        var mapZoom = @mapZoom;
    </script>
    <div class="col-md-6 @(useEmbeddedMap ? "show" : "hide")">
        <div id="map" class="map">
        </div>
    </div>
    <div class="@(useEmbeddedMap ? "col-md-6" : "col-md-12")">
        <ul style="overflow: auto; height: 600px">
            @foreach (var i in mapModel.Locations())
            {
                var gl = new GroupLookup();
                gl.populateFromOrg(i.org);
                @Html.Raw(Model.replaceAndWrite(gl));
            }
        </ul>
    </div>
</div>
