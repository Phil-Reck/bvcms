@model CmsWeb.Areas.Giving.Models.GivingPageModel
@{
    Layout = ViewExtensions2.TouchPointLayout();
    ViewBag.Title = "Edit Giving";
    ViewBag.PageHeader = "Edit Giving";
}
@section head{
    @*@Fingerprint.Css("/Content/touchpoint/lib/bootstrap-editable/css/bootstrap-editable.css")*@
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
}

<giving-page-edit v-bind:giving-page-id="@ViewBag.CurrentGivingPageId"></giving-page-edit>

<div class="row">
    <div class="col-md-12" id="givingPageEdit" style="display:none;">
        <div class="box box-responsive">
            <div class="box-content">
                <div class="row">
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-lg-5 col-md-5 col-sm-5">
                                <div class="form-group">
                                    <label class="control-label">Page Name</label>
                                    <input type="text" id="givingPageName" v-model="currentGivingPage.PageName" class="form-control" />
                                </div>
                            </div>
                            <div class="col-lg-5 col-md-5 col-sm-5">
                                <div class="form-group">
                                    <label class="control-label">Page Title</label>
                                    <input type="text" id="givingPageTitle" v-model="currentGivingPage.PageTitle" class="form-control" />
                                </div>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-2">
                                <div class="form-group">
                                    <label class="control-label">Enabled</label>
                                    <input type="checkbox" id="givingEnabled" v-model="currentGivingPage.Enabled" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-5 col-md-5 col-sm-5">
                                <div class="form-group">
                                    <label class="control-label">Skin</label>
                                    <input type="text" id="givingSkin" v-model="currentGivingPage.SkinFile" class="form-control" />
                                </div>
                            </div>
                            <div class="col-lg-5 col-md-5 col-sm-5">
                                <div class="form-group">
                                    <label class="control-label">Page Type</label>
                                    <select class="form-control" id="givingPageType" v-model="currentGivingPage.PageType">
                                        <option v-for="pageType in PageTypes" v-bind:value="pageType.id">{{pageType.pageTypeName}}</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-2">

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-5 col-md-5 col-sm-5">
                                <div class="form-group">
                                    <label class="control-label">Default Fund</label>
                                    <input type="text" id="givingDefaultFund" v-model="currentGivingPage.FundId" class="form-control" />
                                </div>
                            </div>
                            <div class="col-lg-5 col-md-5 col-sm-5">
                                <div class="form-group">
                                    <label class="control-label">Available Funds</label>
                                    <select multiple class="form-control" id="givingAvailableFunds" v-model="FundIdArray">
                                        <option v-for="availableFund in AvailableFunds" v-bind:value="availableFund.id">{{availableFund.pageTypeName}}</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-2">

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-9 col-md-9 col-sm-9">
                                <div class="form-group">
                                    <label class="control-label">Disabled Redirect</label>
                                    <input type="text" id="givingDisabledRedirect" v-model="currentGivingPage.DisabledRedirect" class="form-control" />
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-3">

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-5 col-md-5 col-sm-5">
                                <div class="form-group">
                                    <label class="control-label">Entry Point</label>
                                    <select class="form-control" style="width:90%;" id="givingEntryPointId" v-model="currentGivingPage.EntryPointId">
                                        <option v-for="entryPoint in EntryPoints" v-bind:value="entryPoint.id">{{entryPoint.pageTypeName}}</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-7 col-md-7 col-sm-7">

                            </div>
                        </div>
                        <br />
                        <a href="/Giving" class="btn btn-default" style="border-radius:5px;">Cancel</a>
                        <button type="button" class="btn btn-primary" style="border-radius:5px;">Save</button>
                    </div>
                    <div class="col-md-4" style="border-left: 2px solid black;">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Top Text</label>
                                    <input type="text" id="givingTopText" v-model="currentGivingPage.TopText" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Thank you message</label>
                                    <input type="text" id="givingThankYouText" v-model="currentGivingPage.ThankYouText" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-10 col-md-10 col-sm-10">
                                <div class="form-group">
                                    <label class="control-label">Online Notify Person</label>
                                    <select multiple class="form-control" id="givingOnlineNotifyPerson" v-model="NotifyPersonArray">
                                        <option v-for="onlineNotifyPerson in OnlineNotifyPersonList" v-bind:value="onlineNotifyPerson.id">{{onlineNotifyPerson.pageTypeName}}</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Confirmation Email - pledge</label>
                                    <select class="form-control" id="givingConfirmationEmailPledge" v-model="currentGivingPage.ConfirmationEmailPledge">
                                        <option v-for="confirmationEmail in ConfirmationEmailList" v-bind:value="confirmationEmail.id">{{confirmationEmail.pageTypeName}}</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Confirmation Email - One time</label>
                                    <select class="form-control" id="givingConfirmationEmailOneTime" v-model="currentGivingPage.ConfirmationEmailOneTime">
                                        <option v-for="confirmationEmail in ConfirmationEmailList" v-bind:value="confirmationEmail.id">{{confirmationEmail.pageTypeName}}</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Confirmation Email - recurring</label>
                                    <select class="form-control" id="givingConfirmationEmailRecurring" v-model="currentGivingPage.ConfirmationEmailRecurring">
                                        <option v-for="confirmationEmail in ConfirmationEmailList" v-bind:value="confirmationEmail.id">{{confirmationEmail.pageTypeName}}</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div style="display:none;">
        <input id="currentGivingPageId" value="@ViewBag.CurrentGivingPageId" />
    </div>
</div>

@section scripts
{
    @*@Fingerprint.Script("/Content/touchpoint/lib/bootstrap-editable/js/bootstrap-editable.min.js")*@
    <script>
        $(document).ready(function () {
            GetGivingPage();
        });

        function GetGivingPage() {
            let currentGivingPageId = document.getElementById("currentGivingPageId").value;
            $.ajax({
                type: "GET",
                dataType: "json",
                url: "/Giving/GetGivingPage",
                data: {
                    id: currentGivingPageId
                },
                success: function (currentGivingPage) {
                    $("#givingPageEdit").show();
                    new Vue({
                        el: "#givingPageEdit",
                        data: {
                            currentGivingPage,
                            PageTypes: [],
                            AvailableFunds: [],
                            EntryPoints: [],
                            OnlineNotifyPersonList: [],
                            ConfirmationEmailList: [],
                            FundIdArray: [],
                            NotifyPersonArray: [],
                        },
                        methods: {
                            myFunctionOnLoad: function () {
                                this.getPageTypes();
                                this.getAvailableFunds();
                                this.getEntryPoints();
                                this.getOnlineNotifyPersonList();
                                this.getConfirmationEmailList();
                            },
                            getPageTypes: function () {
                                this.$http.get('/Giving/GetPageTypes').then(
                                    response => {
                                        if (response.status === 200) {
                                            this.PageTypes = response.body;
                                        }
                                        else {
                                            warning_swal('Warning!', 'Something went wrong, try again later');
                                        }
                                    },
                                    err => {
                                        error_swal('Fatal Error!', 'We are working to fix it');
                                    }
                                );
                            },
                            getAvailableFunds: function () {
                                this.$http.get('/Giving/GetAvailableFunds').then(
                                    response => {
                                        if (response.status === 200) {
                                            this.AvailableFunds = response.body;
                                        }
                                        else {
                                            warning_swal('Warning!', 'Something went wrong, try again later');
                                        }
                                    },
                                    err => {
                                        error_swal('Fatal Error!', 'We are working to fix it');
                                    }
                                );
                            },
                            getEntryPoints: function () {
                                this.$http.get('/Giving/GetEntryPoints').then(
                                    response => {
                                        if (response.status === 200) {
                                            this.EntryPoints = response.body;
                                            this.currentGivingPage.EntryPoints
                                        }
                                        else {
                                            warning_swal('Warning!', 'Something went wrong, try again later');
                                        }
                                    },
                                    err => {
                                        error_swal('Fatal Error!', 'We are working to fix it');
                                    }
                                );
                            },
                            getOnlineNotifyPersonList: function () {
                                this.$http.get('/Giving/GetOnlineNotifyPersonList').then(
                                    response => {
                                        if (response.status === 200) {
                                            this.OnlineNotifyPersonList = response.body;
                                        }
                                        else {
                                            warning_swal('Warning!', 'Something went wrong, try again later');
                                        }
                                    },
                                    err => {
                                        error_swal('Fatal Error!', 'We are working to fix it');
                                    }
                                );
                            },
                            getConfirmationEmailList: function () {
                                this.$http.get('/Giving/GetConfirmationEmailList').then(
                                    response => {
                                        if (response.status === 200) {
                                            this.ConfirmationEmailList = response.body;
                                        }
                                        else {
                                            warning_swal('Warning!', 'Something went wrong, try again later');
                                        }
                                    },
                                    err => {
                                        error_swal('Fatal Error!', 'We are working to fix it');
                                    }
                                );
                            }
                        },
                        created: function () {
                            this.myFunctionOnLoad();
                        }
                    });
                },
                error: function (data) {
                    var asd = data;
                    alert("fail");
                }
            });
        };
    </script>
}
