@using UtilityExtensions
@model IEnumerable<CmsData.GivingPage>
@{
    Layout = ViewExtensions2.TouchPointLayout();
    ViewBag.Title = "Online Giving Setup";
    ViewBag.PageHeader = "Online Giving Setup";
    var message = Util.TempSuccessMessage;
}
@section head{
    @Fingerprint.Css("/Content/touchpoint/lib/bootstrap-editable/css/bootstrap-editable.css")
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <style>
        .switch {
            position: relative;
            display: inline-block;
            width: 54px;
            height: 24px;
        }

            .switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-color: grey;
            -webkit-transition: .4s;
            transition: .4s;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 20px;
                width: 20px;
                left: 4px;
                top: 2px;
                bottom: 0px;
                background-color: white;
                -webkit-transition: .4s;
                transition: .4s;
            }

        input:checked + .slider {
            background-color: #68d400;
        }

            input:checked + .slider:before {
                -webkit-transform: translateX(26px);
                -ms-transform: translateX(26px);
                transform: translateX(26px);
                top: 2px;
                bottom: 0px;
            }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }


        .slider.round {
            border-radius: 34px;
        }

            .slider.round:before {
                border-radius: 50%;
            }
    </style>
}


@*<label class="switch">
    <input class="boolean-toggle" type="checkbox" id="AllowLimitToRoleForInvolvementExport" name="AllowLimitToRoleForInvolvementExport" data-toggle="toggle" data-on="True" data-off="False" data-width="100" )>
    <span class="slider round"></span>
</label>*@
<input class="boolean-toggle" type="checkbox" id="AttendanceReminder" name="AttendanceReminder" data-toggle="toggle" data-on="True" data-off="False" data-width="100" checked="checked" )>

<div class="row" id="table-div" style="display:none;">
    <div class="col-md-9">
        @if (message != null)
        {
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <strong>Success!</strong>&nbsp;&nbsp;@message
            </div>
        }
        <div id="errorMessage" class="alert alert-danger" style="display: none;">

        </div>
        <div class="box box-responsive">
            <div class="box-content">
                <div class="row hidden-xs">
                    <div class="col-sm-12">
                        <div class="pull-right">
                            <button v-on:click="openCreateNew" class="btn btn-success"><i class="fa fa-plus-circle"></i> Giving Page</button>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th><a v:onclick="sort('codiceCliente')" style="cursor:pointer">Enabled</a></th>
                                <th><a v:onclick="sort('ragioneSociale')" style="cursor:pointer">Page Name</a></th>
                                <th><a v:onclick="sort('provincia')" style="cursor:pointer">Skin</a></th>
                                <th><a v:onclick="sort('indirizzo')" style="cursor:pointer">Page Type</a></th>
                                <th><a v:onclick="sort('provincia')" style="cursor:pointer">Default Fund</a></th>
                                <th><a v:onclick="sort('provincia')" style="cursor:pointer">Action</a></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="items in list">
                                <td>
                                    <label class="switch">
                                        <input type="checkbox" v-model="items.Enabled" />
                                        <span class="slider round"></span>
                                    </label>
                                </td>
                                <td>{{ items.PageName }}</td>
                                <td>{{ items.Skin }}</td>
                                <td>{{ items.PageType }}</td>
                                <td>{{ items.DefaultFund }}</td>
                                <td>
                                    <a v-bind:href="'/Giving/Edit/' + items.GivingPageId" class="btn btn-sm btn-default">
                                        <i class="fa fa-pencil"></i> Edit
                                    </a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <button v-on:click="openCreateNew" class="btn btn-success btn-block visible-xs-block"><i class="fa fa-plus-circle"></i> Giving Page</button>
            </div>
        </div>
    </div>
    <div class="modal fade" id="new-modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Add Giving Page</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-5 col-md-5 col-sm-5">
                            <div class="form-group">
                                <label class="control-label">Page Name</label>
                                <input type="text" v-model="newGivingPageName" class="form-control" />
                            </div>
                        </div>
                        <div class="col-lg-5 col-md-5 col-sm-5">
                            <div class="form-group">
                                <label class="control-label">Page Title</label>
                                <input type="text" v-model="newGivingPageTitle" class="form-control" />
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2">
                            <div class="form-group">
                                <label class="control-label">Enabled</label>
                                <input type="checkbox" id="newGivingEnabled" v-model="newGivingEnabled" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-5 col-md-5 col-sm-5">
                            <div class="form-group">
                                <label class="control-label">Skin</label>
                                <input type="text" v-model="newGivingSkinFile" class="form-control" />
                            </div>
                        </div>
                        <div class="col-lg-5 col-md-5 col-sm-5">
                            <div class="form-group">
                                <label class="control-label">Page Type</label>
                                <select class="form-control" v-model="newGivingPageType">
                                    <option v-for="pageType in PageTypes" v-bind:value="pageType.id">{{pageType.pageTypeName}}</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2">

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-5 col-md-5 col-sm-5">
                            <div class="form-group">
                                <label class="control-label">Default Fund</label>
                                <input type="text" v-model="newGivingFundId" class="form-control" />
                            </div>
                        </div>
                        <div class="col-lg-5 col-md-5 col-sm-5">
                            <div class="form-group">
                                <label class="control-label">Available Funds</label>
                                <select multiple class="form-control" v-model="newGivingFundIdArray">
                                    <option v-for="availableFund in AvailableFunds" v-bind:value="availableFund.id">{{availableFund.pageTypeName}}</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2">

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-9 col-md-9 col-sm-9">
                            <div class="form-group">
                                <label class="control-label">Disabled Redirect</label>
                                <input type="text" v-model="newGivingDisabledRedirect" class="form-control" />
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-3">

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-5 col-md-5 col-sm-5">
                            <div class="form-group">
                                <label class="control-label">Entry Point</label>
                                <select class="form-control" style="width:90%;" v-model="newGivingEntryPointId">
                                    <option v-for="entryPoint in EntryPoints" v-bind:value="entryPoint.id">{{entryPoint.pageTypeName}}</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-7 col-md-7 col-sm-7">

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
                    <input v-on:click="createNewGivingPage()" type="button" value="Submit" class="btn btn-primary" data-dismiss="modal" />
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    @Fingerprint.Script("/Content/touchpoint/lib/bootstrap-editable/js/bootstrap-editable.min.js")
    <script>
        $(document).ready(function () {
            GetGivingPageList();
        });

        function GetGivingPageList() {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: "/Giving/GetGivingPageList",
                success: function (list) {
                    new Vue({
                        el: "#table-div",
                        data: {
                            list,
                            PageTypes: [],
                            AvailableFunds: [],
                            EntryPoints: [],
                            newGivingPageName: "",
                            newGivingPageTitle: "",
                            newGivingEnabled: false,
                            newGivingSkinFile: "",
                            newGivingPageType: 0,
                            newGivingFundId: 0,
                            newGivingFundIdArray: [],
                            newGivingDisabledRedirect: "",
                            newGivingEntryPointId: 0
                        },
                        methods: {
                            openCreateNew: function (event) {
                                event.preventDefault();
                                $('#new-modal').modal();
                                $("#newGivingPageName").val('');
                                //this.setFocus();
                                //setFocus();
                                //document.getElementById("newGivingPageName").value = "";
                                //document.getElementById("newGivingPageName").focus();
                                //$("#newGivingPageName").focus();
                                //this.pageName.focus();
                                //this.$nextTick(() => {
                                //    this.$refs.pageName.focus()
                                //})
                                //setTimeout(() => {
                                //    this.$refs.pageName.focus()
                                //})
                                //this.$refs.pageName.focus();
                            },
                            setFocus: function () {
                            //    this.pageName.value = '';
                            //    this.pageName.focus();
                            //    //$("#newGivingPageName").val('').focus();
                            },
                            createNewGivingPage() {
                                $.ajax({
                                    type: "POST",
                                    dataType: "json",
                                    url: "/Giving/CreateNewGivingPage",
                                    data: {
                                        pageName: this.newGivingPageName,
                                        pageTitle: this.newGivingPageTitle,
                                        enabled: this.newGivingEnabled,
                                        skin: this.newGivingSkinFile,
                                        pageType: this.newGivingPageType,
                                        fundId: this.newGivingFundId,
                                        fundArray: this.newGivingFundIdArray,
                                        disabledRedirect: this.newGivingDisabledRedirect,
                                        entryPointId: this.newGivingEntryPointId
                                    },
                                    success: function (response) {
                                        //var asd = 1;
                                        //alert(response);
                                    },
                                    error: function (response) {
                                        var asd = 1;
                                        alert("fail");
                                    }
                                });
                            },
                            getPageTypes: function () {
                                this.$http.get('/Giving/GetPageTypes').then(
                                    response => {
                                        if (response.status === 200) {
                                            this.PageTypes = response.body;
                                        }
                                        else {
                                            warning_swal('Warning!', 'Something went wrong, try again later');
                                        }
                                    },
                                    err => {
                                        error_swal('Fatal Error!', 'We are working to fix it');
                                    }
                                );
                            },
                            getAvailableFunds: function () {
                                this.$http.get('/Giving/GetAvailableFunds').then(
                                    response => {
                                        if (response.status === 200) {
                                            this.AvailableFunds = response.body;
                                        }
                                        else {
                                            warning_swal('Warning!', 'Something went wrong, try again later');
                                        }
                                    },
                                    err => {
                                        error_swal('Fatal Error!', 'We are working to fix it');
                                    }
                                );
                            },
                            getEntryPoints: function () {
                                this.$http.get('/Giving/GetEntryPoints').then(
                                    response => {
                                        if (response.status === 200) {
                                            this.EntryPoints = response.body;
                                            this.currentGivingPage.EntryPoints
                                        }
                                        else {
                                            warning_swal('Warning!', 'Something went wrong, try again later');
                                        }
                                    },
                                    err => {
                                        error_swal('Fatal Error!', 'We are working to fix it');
                                    }
                                );
                            }
                        },
                        created: function () {
                            this.getPageTypes();
                            this.getAvailableFunds();
                            this.getEntryPoints();
                        }
                    });
                    document.getElementById("table-div").style = "display:normal;";
                },
                error: function (data) {
                    //var asd = 1;
                    //alert("fail");
                }
            });
        };
    </script>
    <script>
        //function CreateNewGivingPage() {
        //    var pageName = document.getElementById("newGivingPageName").value;
        //    $.ajax({
        //        type: "POST",
        //        dataType: "json",
        //        url: "/Giving/CreateNewGivingPage",
        //        data: {
        //            pageName: pageName
        //        },
        //        success: function (response) {
        //            //var asd = 1;
        //            //alert(response);
        //        },
        //        //error: function (response) {
        //        //    var asd = 1;
        //        //    alert("fail");
        //        //}
        //    });
        //}

        //$("a.create-new").click(function (ev) {
        //    ev.preventDefault();
        //    $('#new-modal').modal();
        //    return false;
        //});

        //$('#new-modal').on('shown.bs.modal', function () {
        //    $("#newGivingPageName").val('').focus();
        //});
    </script>
}
